description: This playbook remediates Prisma Cloud AWS IAM policy alerts.  It uses
  sub-playbooks that perform the remediation steps.
id: Prisma Cloud Remediation - AWS IAM Policy Misconfiguration
inputs:
- description: Update AWS IAM password policy automatically?
  key: AutoUpdatePasswordPolicy
  required: false
  value:
    simple: "no"
- description: Get the Prisma Cloud policy ID.
  key: policyId
  required: false
  value:
    complex:
      accessor: labels.policy
      root: incident
      transformers:
      - operator: ParseJSON
      - args:
          field:
            value:
              simple: policyId
        operator: getField
name: Prisma Cloud Remediation - AWS IAM Policy Misconfiguration
outputs: []
starttaskid: "0"
system: true
tasks:
  "0":
    id: "0"
    ignoreworker: false
    nexttasks:
      '#none#':
      - "1"
    note: false
    separatecontext: false
    task:
      brand: ""
      id: 972c2cba-e9e8-4b4e-8f92-407ca7fb7917
      iscommand: false
      name: ""
      version: -1
    taskid: 972c2cba-e9e8-4b4e-8f92-407ca7fb7917
    timertriggers: []
    type: start
    view: |-
      {
        "position": {
          "x": 690,
          "y": -180
        }
      }
  "1":
    conditions:
    - condition:
      - - left:
            iscontext: true
            value:
              complex:
                accessor: brand
                filters:
                - - left:
                      iscontext: true
                      value:
                        simple: modules.state
                    operator: isEqualString
                    right:
                      value:
                        simple: active
                - - left:
                      iscontext: true
                      value:
                        simple: modules.brand
                    operator: isEqualString
                    right:
                      value:
                        simple: AWS - IAM
                root: modules
          operator: isEqualString
          right:
            value:
              simple: AWS - IAM
      label: "yes"
    id: "1"
    ignoreworker: false
    nexttasks:
      '#default#':
      - "8"
      "yes":
      - "2"
    note: false
    separatecontext: false
    task:
      brand: ""
      description: Verifies that AWS - IAM integration is enabled.
      id: 5da95853-5c28-4f84-824d-38b0e1c0e9c9
      iscommand: false
      name: Is AWS - IAM integration enabled?
      type: condition
      version: -1
    taskid: 5da95853-5c28-4f84-824d-38b0e1c0e9c9
    timertriggers: []
    type: condition
    view: |-
      {
        "position": {
          "x": 690,
          "y": -50
        }
      }
  "2":
    id: "2"
    ignoreworker: false
    nexttasks:
      '#none#':
      - "3"
    note: false
    separatecontext: false
    task:
      brand: ""
      description: Get AWS account's password policy.
      id: aff07456-1840-40d5-8b24-53c75bf75e62
      iscommand: true
      name: Get IAM password policy
      script: '|||aws-iam-get-account-password-policy'
      type: regular
      version: -1
    taskid: aff07456-1840-40d5-8b24-53c75bf75e62
    timertriggers: []
    type: regular
    view: |-
      {
        "position": {
          "x": 480,
          "y": 120
        }
      }
  "3":
    conditions:
    - condition:
      - - left:
            iscontext: true
            value:
              complex:
                root: inputs.AutoUpdatePasswordPolicy
                transformers:
                - operator: toLowerCase
          operator: isEqualString
          right:
            value:
              simple: "yes"
      label: "yes"
    id: "3"
    ignoreworker: false
    nexttasks:
      '#default#':
      - "5"
      "yes":
      - "10"
    note: false
    separatecontext: false
    task:
      brand: ""
      description: Should we auto-remediate?
      id: 711289d0-3db3-43d7-8527-39112d8bae61
      iscommand: false
      name: Update IAM password policy automatically?
      type: condition
      version: -1
    taskid: 711289d0-3db3-43d7-8527-39112d8bae61
    timertriggers: []
    type: condition
    view: |-
      {
        "position": {
          "x": 150,
          "y": 290
        }
      }
  "5":
    id: "5"
    ignoreworker: false
    message:
      bcc: null
      body:
        simple: ${incident.id} Autoremediate?
      cc: null
      format: ""
      methods: []
      replyOptions:
      - "Yes"
      - "No"
      subject: null
      timings:
        completeafterreplies: 1
        retriescount: 2
        retriesinterval: 360
      to: null
    nexttasks:
      '#default#':
      - "6"
      "Yes":
      - "10"
    note: false
    separatecontext: false
    task:
      brand: ""
      description: Determine whether or not to auto-remediate?
      id: d7495e19-5781-4bbf-88e1-7c4be19f9ad8
      iscommand: false
      name: Auto remediate?
      type: condition
      version: -1
    taskid: d7495e19-5781-4bbf-88e1-7c4be19f9ad8
    timertriggers: []
    type: condition
    view: |-
      {
        "position": {
          "x": 480,
          "y": 460
        }
      }
  "6":
    id: "6"
    ignoreworker: false
    nexttasks:
      '#none#':
      - "9"
    note: false
    separatecontext: false
    task:
      brand: ""
      description: |-
        1. Login to the AWS console and navigate to the IAM dashboard
        2. On the left navigation panel, click on Account Settings
        3. Check Prevent password reuse and enter remember 5 passwords
        4. Click on Apply password policy
      id: 1214b667-e9c5-4efe-8503-d92b4f36cc0a
      iscommand: false
      name: Manually update IAM password policy
      type: regular
      version: -1
    taskid: 1214b667-e9c5-4efe-8503-d92b4f36cc0a
    timertriggers: []
    type: regular
    view: |-
      {
        "position": {
          "x": 480,
          "y": 800
        }
      }
  "7":
    id: "7"
    ignoreworker: false
    nexttasks:
      '#none#':
      - "8"
    note: false
    scriptarguments:
      assetid: {}
      closeNotes: {}
      closeReason: {}
      emailclassification: {}
      id:
        complex:
          accessor: id
          root: incident
      phishingsubtype: {}
    separatecontext: false
    task:
      brand: Builtin
      description: Close the current incident.
      id: 599730fe-9f1e-4a63-89c5-e941732683b6
      iscommand: true
      name: Close investigation
      script: Builtin|||closeInvestigation
      type: regular
      version: -1
    taskid: 599730fe-9f1e-4a63-89c5-e941732683b6
    timertriggers: []
    type: regular
    view: |-
      {
        "position": {
          "x": 480,
          "y": 1150
        }
      }
  "8":
    id: "8"
    ignoreworker: false
    note: false
    separatecontext: false
    task:
      brand: ""
      id: a8d06dc1-f186-4459-87b6-3d05d85f70d0
      iscommand: false
      name: Done
      type: title
      version: -1
    taskid: a8d06dc1-f186-4459-87b6-3d05d85f70d0
    timertriggers: []
    type: title
    view: |-
      {
        "position": {
          "x": 690,
          "y": 1320
        }
      }
  "9":
    continueonerror: true
    id: "9"
    ignoreworker: false
    nexttasks:
      '#none#':
      - "7"
    note: false
    scriptarguments:
      alert-id:
        complex:
          accessor: labels
          root: incident
          transformers:
          - args:
              field:
                value:
                  simple: id
            operator: getField
      alert-rule-name: {}
      alert-status: {}
      cloud-account: {}
      cloud-region: {}
      cloud-type: {}
      dismissal-note:
        simple: ${incident.labels.id} has been remediated by Demisto.
      policy-compliance-standard: {}
      policy-id:
        complex:
          accessor: labels.policy
          root: incident
          transformers:
          - operator: ParseJSON
          - args:
              field:
                value:
                  simple: policyId
            operator: getField
      policy-label: {}
      policy-name: {}
      policy-severity: {}
      policy-type: {}
      resource-id: {}
      resource-name: {}
      resource-type: {}
      risk-grade: {}
      time-range-date-from: {}
      time-range-date-to: {}
      time-range-unit: {}
      time-range-value: {}
    separatecontext: false
    task:
      brand: RedLock
      description: Dismiss the alerts matching the given filter. Must provide either
        policy IDs or alert IDs.
      id: bd2eb7f2-5e30-4623-8e11-ea91b99c23d8
      iscommand: true
      name: Dismiss Prisma Cloud alert
      script: RedLock|||redlock-dismiss-alerts
      type: regular
      version: -1
    taskid: bd2eb7f2-5e30-4623-8e11-ea91b99c23d8
    timertriggers: []
    type: regular
    view: |-
      {
        "position": {
          "x": 480,
          "y": 970
        }
      }
  "10":
    conditions:
    - condition:
      - - left:
            iscontext: true
            value:
              complex:
                root: inputs.policyId
          operator: isNotEmpty
      label: "yes"
    defaultassigneecomplex: {}
    id: "10"
    ignoreworker: false
    nexttasks:
      '#default#':
      - "6"
      "yes":
      - "11"
    note: false
    separatecontext: false
    task:
      brand: ""
      description: Verify that a Prisma Cloud policy ID exists.
      id: 6cf1c5ce-fa0f-41a7-8b34-fb7a04147861
      iscommand: false
      name: Get Prisma Cloud policy id
      type: condition
      version: -1
    taskid: 6cf1c5ce-fa0f-41a7-8b34-fb7a04147861
    timertriggers: []
    type: condition
    view: |-
      {
        "position": {
          "x": 150,
          "y": 630
        }
      }
  "11":
    id: "11"
    ignoreworker: false
    loop:
      exitCondition: ""
      iscommand: false
      wait: 1
    nexttasks:
      '#none#':
      - "9"
    note: false
    scriptarguments:
      policyId:
        complex:
          root: inputs.policyId
    separatecontext: true
    task:
      brand: ""
      id: ee45afd1-410b-4809-87b7-abc09bfb8146
      iscommand: false
      name: Prisma Cloud Remediation - AWS IAM Password Policy Misconfiguration
      playbookId: Prisma Cloud Remediation - AWS IAM Password Policy Misconfiguration
      type: playbook
      version: -1
    taskid: ee45afd1-410b-4809-87b7-abc09bfb8146
    timertriggers: []
    type: playbook
    view: |-
      {
        "position": {
          "x": -100,
          "y": 800
        }
      }
version: -1
view: |-
  {
    "linkLabelsPosition": {
      "10_11_yes": 0.53,
      "10_6_#default#": 0.51,
      "1_2_yes": 0.49,
      "1_8_#default#": 0.21,
      "3_10_yes": 0.48,
      "3_5_#default#": 0.48,
      "5_10_Yes": 0.51,
      "5_6_#default#": 0.42
    },
    "paper": {
      "dimensions": {
        "height": 1565,
        "width": 1170,
        "x": -100,
        "y": -180
      }
    }
  }
