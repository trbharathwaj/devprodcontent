args:
- default: true
  description: Array or comma-separated list of IPv4 addresses to filter.
  isArray: true
  name: value
  required: true
- description: Array or comma-separated list of IPv4 ranges, in CIDR notation, against
    which to match the IPv4 addresses.
  isArray: true
  name: cidr_ranges
  required: true
comment: Transformer that returns a filtered list of IPv4 addresses, based on whether
  they do not match a comma-separated list of IPv4 ranges.  Useful for filtering out
  internal IP address space.
commonfields:
  id: IPv4Blacklist
  version: -1
dockerimage: demisto/netutils:1.0.0.5165
enabled: true
name: IPv4Blacklist
runas: DBotWeakRole
runonce: false
script: |2



  from netaddr import IPAddress, IPNetwork


  def main():
      ip_addresses = argToList(demisto.args()['value'])
      cidr_range_list = argToList(demisto.args()['cidr_ranges'])

      excluded_addresses = []

      for ip_address in ip_addresses:
          found = False
          ip = IPAddress(ip_address)

          for cidr_range in cidr_range_list:
              if ip in IPNetwork(cidr_range):
                  found = True

          if not found:
              excluded_addresses.append(ip_address)

      if not excluded_addresses:
          demisto.results(None)
      else:
          demisto.results(excluded_addresses)


  if __name__ == "__builtin__" or __name__ == "builtins":
      main()
scripttarget: 0
subtype: python3
system: true
tags:
- transformer
- entirelist
type: python
